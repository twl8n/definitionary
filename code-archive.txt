(defn authenticated? [name pass]
  (and (= name "foo")
       (= pass "bar")))

;; This def "app" is the only current endpoint. ;; http://localhost:8080/app?whatever
(def app
  (wrap-basic-authentication (wrap-multipart-params (wrap-params handler)) authenticated?))



(defn save-defini
  "Insert or update a definition. Return the definition id"
  [{:keys [id lang myword phrase]}]
  ;; insert new
  (if (or (nil? id) (= "" id))
    (do 
      (jdbc/with-db-transaction [dbh db]
        (jdbc/execute! dbh ["insert into defini (id,lang,myword,phrase) values ((select max(id)+1 from defini),?,?,?)" lang myword phrase])
        (:id (first (jdbc/query dbh ["select last_insert_rowid() as id"])))))
    (do
      (jdbc/with-db-transaction [dbh db]
        (when (= '(0) (jdbc/execute! dbh ["update defini set myword=?,phrase=? where id=? and lang=?" myword phrase id lang]))
          (jdbc/execute! dbh ["insert into defini (id,lang,myword,phrase) values ((select max(id)+1 from defini),?,?,?)" lang myword phrase])))
      (:id (first (jdbc/query dbh ["select last_insert_rowid() as id"]))))))

(defn pq [xx] (java.util.regex.Pattern/quote xx))

#!/usr/bin/env bb

(def db "tmp.db")

(defn query [& args]
  (apply shell/sh "sqlite3" "-quote" "-header" "-separator" " | " db args))

